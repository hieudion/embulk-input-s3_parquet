plugins {
    id "com.jfrog.bintray" version "1.7"
    id "com.github.jruby-gradle.base" version "0.1.5"
    id "java"
    id "checkstyle"
}
import com.github.jrubygradle.JRubyExec

allprojects {
    group = 'ai.rubik.input.s3_parquet'
    version = '0.1.0'

    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'

    // bintray
    bintray {
        // write at your bintray user name and api key to ~/.gradle/gradle.properties file:
        user = project.hasProperty('bintray_user') ? bintray_user : ''
        key = project.hasProperty('bintray_api_key') ? bintray_api_key : ''

        publications = ['mavenJava']
        publish = true

        pkg {
            userOrg = 'embulk-input-s3_parquet'
            repo = 'maven'
            name = project.name
            desc = 'S3_parquet file input plugin for Embulk'
            websiteUrl = 'https://github.com/rubik-ai/embulk-input-s3_parquet'
            issueTrackerUrl = 'https://github.com/rubik-ai/embulk-input-s3_parquet/issues'
            vcsUrl = 'https://github.com/rubik-ai/embulk-input-s3_parquet.git'
            licenses = ['Apache-2.0']
            labels = ['embulk', 'java']
            publicDownloadNumbers = true

            version {
                name = project.version
            }
        }
    }
}

subprojects {
    apply plugin: 'maven'  // install jar files to the local repo: $ gradle install
    apply plugin: 'java'
    //apply plugin: 'findbugs'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.jruby-gradle.base'

    repositories {
        mavenCentral()
        jcenter()
    }

    configurations {
        provided
        compile.exclude group: 'commons-logging', module: 'commons-logging'
        // commons-logging api is provided by jcl-over-slf4j
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile "org.embulk:embulk-core:0.9.12"
        provided "org.embulk:embulk-core:0.9.12"
        compile "com.amazonaws:aws-java-sdk-s3:1.11.466"
        compile "com.amazonaws:aws-java-sdk-sts:1.11.466"
        compile 'com.amazonaws:aws-java-sdk:1.11.213'
        compile 'org.apache.parquet:parquet-avro:1.9.0'
        compile 'org.apache.parquet:parquet-hadoop:1.9.0'
        compile 'org.apache.hadoop:hadoop-common:3.2.1'
        compile 'org.apache.hadoop:hadoop-aws:3.2.1'
        compile 'org.apache.hadoop:hadoop-client:3.2.1'

        compile group: 'tech.allegro.schema.json2avro', name: 'converter', version: '0.2.5'

        runtime "org.slf4j:jcl-over-slf4j:1.7.12"  // aws-sdk uses Apache Commons Logging and Embulk uses slf4j
        testCompile "junit:junit:4.+"
        testCompile "org.mockito:mockito-core:1.+"
        testCompile "org.embulk:embulk-standards:0.9.12"
        testCompile "org.embulk:embulk-core:0.9.12:tests"
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" //<< "-Xlint:deprecation"
        }
    }

    task classpath(type: Copy, dependsOn: ["jar"]) {
        doFirst { file('classpath').deleteDir() }
        from(configurations.runtime - configurations.provided + files(jar.archivePath))
        into 'classpath'
    }
    clean { delete 'classpath' }

    if (![project(":embulk-util-aws-credentials")].contains(project)) {
        task gem(type: JRubyExec, dependsOn: ['build', 'gemspec', 'classpath']) {
            jrubyArgs '-rrubygems/gem_runner', "-eGem::GemRunner.new.run(ARGV)", 'build'
            script "${project.projectDir.absolutePath}/build/gemspec"
            doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "${parent.projectDir}/pkg") }
        }
    }

    // publishing
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact testsJar
                artifact sourcesJar
                artifact javadocJar
                pom.withXml {
                    asNode().dependencies.dependency.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }
    }
    // add tests/javadoc/source jar tasks as artifacts to be released
    task testsJar(type: Jar, dependsOn: classes) {
        classifier = 'tests'
        from sourceSets.test.output
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives testsJar, sourcesJar, javadocJar
    }

    checkstyle {
        configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
        toolVersion = '6.14.1'
    }
    checkstyleMain {
        configFile = file("${project.rootDir}/config/checkstyle/default.xml")
        ignoreFailures = true
    }
    checkstyleTest {
        configFile = file("${project.rootDir}/config/checkstyle/default.xml")
        ignoreFailures = true
    }
    task checkstyle(type: Checkstyle) {
        classpath = sourceSets.main.output + sourceSets.test.output
        source = sourceSets.main.allJava + sourceSets.test.allJava
    }

}

task gemPush << {
    "gem push pkg/embulk-input-s3_parquet-${project.version}.gem".execute().waitFor()
}

